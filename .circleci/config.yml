version: 2.1
orbs:
  heroku: circleci/heroku@1.0.1
workflows:
  heroku_deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - deploy-pro:
          requires:
            - build
          filters:
            branches:
              only:
                - master

jobs:
  build:
    working_directory: ~/repo
    docker:
      # Language: Ruby
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
          REVIEWDOG_VERSION: 0.9.11
      # DB: PostgreSQL
      - image: circleci/postgres:11.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: date-suggester-rails_test
    steps:
      - checkout
      # Download and cache dependencies
      - run:
          name: Install bundler
          command: gem install bundler:2.1.4

      - restore_cache:
          keys:
            - date-suggester-rails-{{ checksum "Gemfile.lock" }}
            - date-suggester-rails-

      - run:
          name: Bundle Install
          command: bundle check || bundle install --deployment

      - save_cache:
          key: date-suggester-rails-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Database setup
          command: bundle exec rails db:schema:load

      - run:
          name: Run rspec in parallel
          command: |
            mkdir /tmp/test-results
            bundle exec rspec --profile 10 \
                        --format RspecJunitFormatter \
                        --out /tmp/test_results/rspec.xml \
                        --format progress \
                        $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - run:
          name: Install reviewdog
          command: |
            curl -fSL https://github.com/haya14busa/reviewdog/releases/download/$REVIEWDOG_VERSION/reviewdog_linux_amd64 -o reviewdog && chmod +x ./reviewdog

      - run:
          name: Run rubocop & reviewdog
          command: bundle exec rubocop | ./reviewdog -f=rubocop -reporter=github-pr-review

  deploy-dev:
    working_directory: /tmp/repo-dev
    docker:
      - image: buildpack-deps:bionic
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run:
          name: Mentenance mode ON
          command: heroku maintenance:on --app $HEROKU_DEV_APP_NAME
      - heroku/deploy-via-git:
          app-name: $HEROKU_DEV_APP_NAME
      - run:
          name: Command run rails db:migrate
          command: heroku run bundle exec rails db:migrate --app $HEROKU_DEV_APP_NAME
      - run:
          name: Command run rails db:seed_fu
          command: |
            heroku run bundle exec rails db:seed_fu \
            FIXTURE_PATH=./db/fixtures/development \
            --app $HEROKU_DEV_APP_NAME
      - run:
          name: Mentenance mode OFF
          command: heroku maintenance:off --app $HEROKU_DEV_APP_NAME

  deploy-pro:
    working_directory: /tmp/repo-pro
    docker:
      - image: buildpack-deps:bionic
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run:
          name: Mentenance mode ON
          command: heroku maintenance:on --app $HEROKU_DEV_APP_NAME
      - heroku/deploy-via-git:
          app-name: $HEROKU_PRO_APP_NAME
      - run:
          name: Command run rails db:migrate
          command: heroku run bundle exec rails db:migrate --app $HEROKU_PRO_APP_NAME
      - run:
          name: Mentenance mode OFF
          command: heroku maintenance:off --app $HEROKU_DEV_APP_NAME
